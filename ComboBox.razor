@using DataJuggler.UltimateHelper
@using DataJuggler.Blazor.Components.Enumerations
@using BlazorStyled
@using System.Drawing

<Styled @bind-Classname=@LabelStyle>
    display: inline-block;
    font-size: @LabelFontSizeStyle;
    text-align: right;
    background-color: @LabelBackColor;
    margin-right: @LabelMarginRightStyle !important;
    color: @LabelColorName;
    white-space: nowrap;
    width: @LabelWidthStyle;
    min-width: @LabelWidthStyle;
    max-width: @LabelWidthStyle;
    z-index: @ZIndexMinusStyle;
    position: @LabelPosition;
    left: @LabelLeftStyle;
    top: @LabelTopStyle;
</Styled>
<Styled @bind-Classname=@ComboboxStyle>
    display: inline-block;
    height: @HeightStyle;
    max-height: @HeightStyle;
    min-height: @HeightStyle;
    width: @WidthStyle;
    min-width: @WidthStyle;
    max-width: @WidthStyle;
    font-size: @LabelFontSizeStyle;
    justify-content: left;
    text-align: center;
    z-index: @ZIndex;
    position: @Position;
    left: @LeftStyle;
    top: @TopStyle;
    overflow: visible;
</Styled>
<Styled @bind-Classname=@ListItemStyle>
    font-family: Verdana;
    text-align: left;
    background-color: @ListBackgroundColorName;
    width: @ListItemWidthStyle;
    height: @ListItemHeightStyle;
    position: @listItemPosition;
    color: @ListItemTextColorName;
    left: @ListItemLeftStyle;
    top: @ListItemTopStyle;
    font-size: @FontSizeStyle;
    z-index: @ListZIndex;
    border-width: 1px;
    border-color: gray;
    border-style: solid;
    overflow: visible;
</Styled>
<Styled @bind-Classname=@ButtonStyle>
    display: inline;
    text-align: left;
    background-size: 100% 100%;
    z-index: 30;
    height: 25.6px;
    position: @ButtonPosition;
    left: @ButtonLeftStyle;
    top: @ButtonTopStyle;
</Styled>
<Styled @bind-Classname=@CheckedListBoxStyle>   
    position: @CheckedListPosition;
    height: @CheckedListheightStyle;
    min-height: @CheckedListheightStyle;
    max-height: @CheckedListheightStyle;
    width: @CheckedListWidthStyle;
    max-width: @CheckedListWidthStyle;
    min-width: @CheckedListWidthStyle;    
    left: @CheckedListLeftStyle;
    top: @CheckedListTopStyle;
    z-index: @CheckedListZIndex;
    background-color: @ListBackgroundColorName;
    overflow: visible;
</Styled>
<Styled @bind-Classname=@ContainerStyle>
    text-align: left;
    height: @ControlHeightStyle;
    min-height: @ControlHeightStyle;
    max-height: @ControlHeightStyle;
    width: @ControlWidthStyle;
    min-width: @ControlWidthStyle;
    max-width: @ControlHeightStyle;
    position: @Position;
    top: @TopStyle;
    left: @LeftStyle;
    display: flex;
    justify-content: left;
    gap: 0px;
</Styled>

@if (Visible)
{
    <div class="@ContainerStyle @ClassName">
        <table>
            <tr class="textdonotwrap">
                <td width="@TextBoxWidth">
                    <ValidationComponent Name="DisplayTextBox" Caption="@LabelText" Parent="this" ClassName="displayinline"
                            Column1Width="@Column1Width" Column2Width="@Column2Width" TextBoxWidth="@TextBoxWidth"
                            SendAllTextToParent=true Text="@SelectedText"
                            Width="@Width" LabelClassName="@LabelClassName" ZIndex="@ZIndex">
                    </ValidationComponent>
                </td>
                <td width="@ButtonWidth">
                    <ImageButton ClassName="@ButtonStyle" ButtonNumber="1" HeightUnit="px" Height="@ButtonHeight"
                            Unit="px" Width="@ButtonWidth" Name="CalendarButton" Position="@ButtonPosition" ZIndex="@ZIndex"
                            Left="@ButtonLeft" Top=@ButtonTop ImageUrl="@ButtonUrl" Parent="this" ClickHandler="@ButtonClicked">
                    </ImageButton>
                </td>
            </tr>
        </table>
        @if ((Expanded) && (ListHelper.HasOneOrMoreItems(Items)))
        {  
            @if (CheckListMode)
            {
                <table class="@CheckedListBoxStyle">
                    <tr>
                    <CheckedListBox Parent="this" HeightUnit="@CheckedListHeightUnit" Height="@CheckedListheight" Position="@CheckedListPosition"
                        Unit="@CheckedListUnit" Width=@CheckedListWidth ListItemWidth=@ListItemWidth 
                        ListItemHeight="@ListItemHeight" ListItemLeft=@CheckedListItemLeft 
                        ListItemTop="@CheckedListItemTop" ListItemBackgroundColor=@ListItemBackgroundColor
                        CheckBoxTextXPosition="@CheckBoxTextXPosition" CheckBoxTextYPosition="@CheckBoxTextYPosition"
                        ListBackgroundColor="Color.White" Top="0" ZIndex="@CheckedListZIndex"
                        CheckBoxXPosition=@CheckBoxXPosition  CheckBoxYPosition="@CheckBoxYPosition" 
                        Left=0  ListItemClassName="@ListItemClassName"  ClassName="@CheckedListClassName">
                    </CheckedListBox>
                    </tr>
                </table>
            }
            else
            {  
                <div class="@ListItemStyle @DropdownClassName">
                    <select class="form-control" name="ListBox" size="@VisibleCount"
                            id="ComboBoxListBox" @onchange="SelectionChanged">
                        @foreach (Item item in Items)
                        {
                            <option class="nopadding">@item.Text</option>
                        }
                    </select>
                </div>
            }                
        }                   
    </div>
}