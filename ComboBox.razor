@using DataJuggler.UltimateHelper
@using DataJuggler.Blazor.Components.Enumerations
@using BlazorStyled
@using System.Drawing

<Styled @bind-Classname=@ListItemContainer>
    font-family: Calibri;
    text-align: left;
    background-color: @ListBackgroundColorName;
    width: @ListItemWidthStyle;
    min-width: @ListItemWidthStyle;    
    position: @ListItemPosition;
    color: @ListItemTextColorName;
    left: @ListItemLeftStyle;
    top: @ListItemTopStyle;
    font-size: @FontSizeStyle;
    z-index: @ListZIndex;
    border-width: 1px;
    border-color: gray;
    border-style: solid;
    overflow: visible;
</Styled>
<Styled @bind-Classname=@ListItemStyle>    
    width: @ListItemWidthStyle;
    min-width: @ListItemWidthStyle;
    height: @ListItemHeightStyle;    
</Styled>
<Styled @bind-Classname=@ButtonStyle>
    display: inline;
    text-align: left;
    background-size: 100% 100%;
    z-index: @ZIndex;
    height: 25.6px;
    position: @ButtonPosition;
    left: @ButtonLeftStyle;
    top: @ButtonTopStyle;
    cursor: pointer;
</Styled>
<Styled @bind-Classname=@CheckedListBoxStyle>   
    position: @CheckedListPosition;
    height: @CheckedListheightStyle;
    min-height: @CheckedListheightStyle;
    max-height: @CheckedListheightStyle;
    width: @CheckedListWidthStyle;
    max-width: @CheckedListWidthStyle;
    min-width: @CheckedListWidthStyle;    
    left: @CheckedListLeftStyle;
    top: @CheckedListTopStyle;
    z-index: @CheckedListZIndex;
    background-color: @ListBackgroundColorName;
    overflow: visible;
</Styled>
<Styled @bind-Classname=@ContainerStyle>
    text-align: left;
    height: @ControlHeightStyle;
    min-height: @ControlHeightStyle;
    max-height: @ControlHeightStyle;
    width: @ControlWidthStyle;
    min-width: @ControlWidthStyle;
    max-width: @ControlHeightStyle;
    position: @Position;
    top: @TopStyle;
    left: @LeftStyle;
    display: flex;
    justify-content: left;
    gap: 0px;
</Styled>

@if (Visible)
{
    <div class="@ContainerStyle @ClassName textdonotwrap">
        <table>
            <tr class="textdonotwrap">
                <td width="@TextBoxWidth">
                    <TextBoxComponent Name="DisplayTextBox" Caption="@LabelText" Parent="this" 
                    ClassName="displayinline" Column1Width="@Column1Width" 
                    Column2Width="@Column2Width" TextBoxWidth="@TextBoxWidth" Height="@TextBoxHeight"
                    LabelFontName="@LabelFontName" LabelFontSize ="@LabelFontSize"
                    LabelColor="@LabelColor.Name" OnTextChangedCallback="OnTextChanged"
                    TextBoxFontSize="@TextBoxFontSize" TextBoxFontName="@TextBoxFontName"
                    SendAllTextToParent=true Text="@SelectedText" Enabled="@TextBoxEnabled"
                    Width="@Width" LabelClassName="@LabelClassName" ZIndex="@ZIndex">
                    </TextBoxComponent>
                </td>
                @if (ShowButton)
                {
                    <td width="@Column2Width">
                        <ImageButton ClassName="@ButtonStyle" ButtonNumber="1" HeightUnit="px" Height="@ButtonHeight"
                                Unit="px" Width="@ButtonWidth" Name="CalendarButton" Position="@ButtonPosition" ZIndex="@ZIndex"
                                Left="@ButtonLeft" Top=@ButtonTop ImageUrl="@ButtonUrl" Parent="this" ClickHandler="@ButtonClicked">
                        </ImageButton>
                    </td>
                }
            </tr>
        </table>
        @if ((Expanded) && (ListHelper.HasOneOrMoreItems(Items)))
        {  
            @if (CheckListMode)
            {
                <table class="@CheckedListBoxStyle">
                    <tr>
                    <CheckedListBox Parent="this" HeightUnit="@CheckedListHeightUnit" Height="@CheckedListheight" 
                        Position="@CheckedListPosition" Unit="@CheckedListUnit" Width=@CheckedListWidth 
                        ListItemWidth=@ListItemWidth  ListItemHeight="@ListItemHeight" ListItemLeft=@CheckedListItemLeft 
                        ListItemTop="@CheckedListItemTop" ListItemBackgroundColor=@ListItemBackgroundColor
                        CheckBoxTextXPosition="@CheckBoxTextXPosition" CheckBoxTextYPosition="@CheckBoxTextYPosition"
                        ListBackgroundColor="Color.White" Top="0" ZIndex="@CheckedListZIndex"
                        CheckBoxXPosition=@CheckBoxXPosition  CheckBoxYPosition="@CheckBoxYPosition" 
                        Left=@CheckedListLeft  ListItemClassName="@ListItemClassName"  ClassName="@CheckedListClassName">
                    </CheckedListBox>
                    </tr>
                </table>
            }
            else
            {
                <div class="@ListItemContainer @DropdownClassName">
                    <select class="form-control" name="ListBox" size="@VisibleCount"
                            id="ComboBoxListBox" @onchange="SelectionChanged">
                        @foreach (Item item in Items)
                        {
                            <option class="@ListItemStyle nopadding" >@item.Text</option>
                        }
                    </select>
                </div>
            }                
        }                   
    </div>
}