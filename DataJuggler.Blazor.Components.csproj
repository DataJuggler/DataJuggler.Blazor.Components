<Project Sdk="Microsoft.NET.Sdk.Razor">

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <RazorLangVersion>3.0</RazorLangVersion>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Authors>DataJuggler</Authors>
    <Description>A collection of components to make building a Blazor project simpler. So far only a ProgressBar, Sprite and a Validation component, now for .Net 5.0

A live demo is available at https://excelerate.datajuggler.com

And the code for Blazor Excelerate is here:
https://github.com/DataJuggler/Blazor.Excelerate


This project uses a really awesome project called BlazorStyled by Chanen Braunstein (I think I spelled that right), which makes it simple to dynamically alter CSS values using Blazor.
New Version 1.5
.Net 5.0 is the only supported version going forward.

New to version 1.3 is a new really cool progress bar that uses all CSS by 
http://circle.firchow.net/ by Andre Firchow, and his blog is here: http://firchow.net/</Description>
    <Copyright>2021 - Data Juggler - Use For Anything You Want, No Warranty.</Copyright>
    <PackageLicenseFile>License.txt</PackageLicenseFile>
    <PackageProjectUrl>https://github.com/DataJuggler/DataJuggler.Blazor.Components</PackageProjectUrl>
    <PackageIcon>Logo Black.png</PackageIcon>
    <PackageIconUrl />
    <RepositoryUrl>https://github.com/DataJuggler/DataJuggler.Blazor.Components.git</RepositoryUrl>
    <RepositoryType>Git - Git Hub</RepositoryType>
    <PackageTags>Blazor,C#,UI,Components,ProgressBar,Animation,BlazorStyled,ValidationComponent</PackageTags>
    <PackageReleaseNotes>11.7.2021
Version 1.7.2: The Nuget package DataJuggler.UltimateHelper was updated, so I released a new version of this
component.

11.1.2021
Version 1.7.1: DataJuggler.UltimateHelper was updated, so I updated this project. No code changes.

10.24.2021
Version 1.7.0: I updated to version 1.7 since I added a bunch of properties to many components.

10.23.2021
Version 1.6.7: checking in with a few fixes and properties added for positioning elements.

10.23.2021
Version 1.6.6: I added a few ZIndex properties to the ComboBox, and also I added a ZIndex property to the ValidationComponent. I had an issue where the ComboBox when it dropped down was behind another item.

10.19.2021
Version 1.6.5: I started working on Animating sprites. The current implentation has too much flickering. I read about ways to double buffer and smooth it out, but for now it was just an idea I wanted to add to my new project
Blazor.Excelerate. If my animation could have been done in a few hours I would have included, but
for now I will just publish it and make this a 'nice to have feature if I ever get bored'.

10.16.2021
Version 1.6.4: I added a SetVisible method and a Visible parameter to the ImageButton.

10.14.2021
Version 1.6.3: Added Top and Left properties to the ValidationComponent.

10.14.2021
Version 1.6.2: I did some more testing and the ComboBox and ImageButtons had some improvements made.

1.6.0: Added two new methods to the ValidationComponent:
SetTextValue
SetCheckBoxValue

1.5.12: Add the TextBoxHeight didn't do anything, since I forgot to apply it to the TextBoxCSS. Now fixed.

1.5.11: The Height property needed a TextBoxHeight property also.

1.5.10: I added a Height property. This is needed when Multiline is set to true. I also added a DefaultTextBoxHeight and MultilineTextBoxHeight. These have default values of 3.2 and 8 for now as I test, but can be set in your implementation. When setting Multiline to true, I needed a value to change the height to.

1.5.9: I changed the default TextBoxWidth to 30 from 76, which messed up existing users

1.5.8: I added a property 'TextBoxWidth', which is a double and set the value for TextBoxWidthPercent, a string.

1.5.7: I added a Width property to the ValidationComponent. This value is in percentage, and it defaults to 80 percent. Not sure if 80 is the right value or not. I also changed the Text-Align property to top for the label. This may need to be a Parameter.

1.5.6: I forgot to add the Parameter tag to the Multiline propery.

1.5.5: I added a Multiline propery to for description or long text fields

1.5.4: I added the tag Parameter to the ValidationComponent.LabelColor and TextBoxBackColor.

1.5.2: I had a problem publishing a .Net 5 project, trying again.

Version 1.5.1: I accidently marked this project as depreciated, when I was having a temporary problem with my BlazorFileUpload component converting it to .Net 5. That has been resolved. 

Version 1.5.0 - I updated to .Net 5.

1.5.0: .Net 5.0 conversion of Nuget packages and Target Framework.

New version 1.4
Validation Component

1.4.11 - For some reason I added Open and Close curly brackets to a BlazorStyled Class.
Oops. Time for bed soon.

1.4.10 - I was not using the Css classes that were in this library, except for the circle.scss, so I removed them.
I also added some properties for the ValidationControl to help style it outside of this component.

1.4.9 - I added CheckBoxXPostion and CheckBoxYPostion and got rid of CheckBoxVerticalPosition.
Sorry for the incovenience if you upgraded.

1.4.8 - This is the same as 1.4.6. I have to update the control more carefully because I broke everything.
I really hope this works.

1.4.7 - Rolled Back Due To Errors Found After Publish

1.4.6 - I made a breaking change to the Sprie component, but now when you set Sprite.Height or Width, it translates to HeightStyle = Height + "vh" and setting Width sets WidthStyle to Width + "%".
Previously it was set to HeightPixels and WidthPixels, and this causes zoom differences in a site.

1.4.5 - I changed the XPosition and YPosition values to set XPositionStyle and YPositionStyle instead of
XPositionPixels and YPositionPixels, because I changed the value to use % for X and vh for Y to make
it scale better. Using px makes cites appear differently depending on zoom values.

1.4.4 - I forgot to add the Opacity property to the sprity. Oops.

1.4.3 - I added an Opacity property to the Sprity component. 

1.4.2 - I added a new property called CheckBoxVerticalPosition to the ValidationControl. This is only applicable
when CheckBoxMode = true.

1.4.1 - I fixed the images for UniqueImageUrl and TakenImageUrl to be embedded in the component.

1.4.0 - I added a new ValidationComponent.

1.3.5 - I added a SetClientHandledIncrement method so I can turn this value on or off from outside the component.

1.3.4 - I got this working finally. The property Important was needed to make the text color override.
I actually am not using BlazorStyled for the Progress Bar now, which makes setup just add the Nuget package and the Css reference to Circles.css, which is easier for everyone.

1.3.3 - I added 3 new Parameters:
Size: Size, Small - Medium - Large - Medium is default
Color: Blue, Green or Orange, Blue is Default
Theme: Light or Dark, and I chose Dark as default

Also, two properties for Text:
OverrideThemeColorForText - defaults to false.
If true, and a TextColor is provided, the TextColor will be used instead of the Theme color for Text.

TextColor - The color to use for Text.


1.3.2 - This actually works now. I am working on the documentation now for the new features.

1.3.1 - I included the div for progresscontainer, which is meant to be used by the client, or I may expose a class for it soon.

1.3.0 - My progress bar went from little league to the minors with this upgrade. I found a pure CSS way, and it works really well. Themes and more are coming, this is the first release, so it is back in beta.

1.2.1 - I realzied my ValidationComponent had a lot of code specific to my project PixelDatabase.Net, so I removed it for now. I will update it again later.

1.2.0 - I added a new component called a ValidationComponent.
I also removed the ProgressBar from the Sprite Interface.
I will update the Progress Bar in the near future, as I found a pure CSS way that is pretty cool.


1.1.2 - I added a BackgroundColor property. To use it, you must set BackgroundImage to an empty string to override DarkBackground image.

1.1.1 - The new ProgressBar now has a Theme for Circles or Squares. Also, I updated the Nuget packages to multi-target so .Net Standard and .Net Core can use them, without having to use the .Net Framework classes.

1.1.0 - I didn't like my first progressbar as once I started testing in a real world environment it looked very choppy and was a little too futuristic to be used in most apps. This new look is pretty clean and their is a Theme option now for Squares or Circles.

1.0.7 -After removing BlazorComponentBase class, OnComponentRegistered was no longer needed, so I removed it.

1.0.6 - BlazorComponentBase class didn't seem to work as I expected, so I killed it.

1.0.5 - I created a new BlazorComponentBase class and added a new method to IBlazorComponentParent called OnComponentRegistered.

1.0.4 - I created two new classes NamedParameter and Message. 
A message contains a Text property a collection (Generic List) of NamedParameters.

This is a breaking change of the ReceiveData methods for the IBlazorComponent and IBlazorComponent parent .
Now is the time to break anything.


1.0.3 - I added two generic interfaces for IBlazorComponent and IBlazorComponent interface.

1.0.2 - I added Scale property to the ProgressBar to make it easy to adjust the size.

1.0.1 - I added a Sprite component.

1.0.0 This is the first version I am releasing along with a Sample.</PackageReleaseNotes>
    <Version>1.7.2</Version>
    <AssemblyVersion>1.7.1.0</AssemblyVersion>
    <FileVersion>1.7.1.0</FileVersion>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="Samples\**" />
    <Content Remove="Samples\**" />
    <EmbeddedResource Remove="Samples\**" />
    <None Remove="Samples\**" />    
    <None Include="License\License.txt">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
    <None Include="wwwroot\Images\Logo Black.png">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>


  <ItemGroup>
    <PackageReference Include="BlazorStyled" Version="3.1.0" />
    <PackageReference Include="DataJuggler.UltimateHelper" Version="1.6.9" />
    <PackageReference Include="Microsoft.AspNetCore.Components" Version="5.0.11" />
    <PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="5.0.11" />
  </ItemGroup>

</Project>
